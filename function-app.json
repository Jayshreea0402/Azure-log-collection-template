{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "functionAppName": {
            "type": "string",
            "defaultValue": "[concat('motadata-functionapp-', newGuid())]",
            "metadata": {
                "description": "motadataFunctionApp"
            }
        },
        "functionName": {
            "type": "string",
            "defaultValue": "motadataFunctionApp",
            "metadata": {
                "description": "The name of the function."
            }
        },
        "eventhubName": {
            "type": "string",
            "defaultValue": "motadataeventhub",
            "metadata": {
                "description": "The name of the eventhub."
            }
        },
        "eventhubNamespace": {
            "type": "string",
            "metadata": {
                "description": "motadataEventhubNamespace"
            }
        },
        "functionCode": {
            "type": "string",
            "defaultValue": "import logging\nimport azure.functions as func\n\ndef main(eventHubMessages: func.EventHubEvent):\n    logging.info('Python EventHub trigger processed an event: %s', eventHubMessages.get_body().decode('utf-8'))\n",
            "metadata": {
                "description": "Code for the function to run, saved into __init__.py"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "endpointSuffix": {
            "type": "string",
            "defaultValue": "linux",
            "metadata": {
                "description": "Endpoint suffix for storage account"
            }
        }
    },
    "variables": {
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'storageacct')]",
        "connectionStringKey": "RootManageSharedAccessKey",
        "authRule": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', parameters('eventhubNamespace'),'RootManageSharedAccessKey')]",
        "functionAppKind": "functionapp,linux",
        "functionAppRuntime": "PYTHON|3.10",
        "linuxFxVersion": "PYTHON|3.10",
        "siteConfig": {
        "alwaysOn": true
    },
    "functionCode": "Your Python Function Code Goes Here"
  },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS"
            }
        },
        {
            "apiVersion": "2018-11-01",
            "type": "Microsoft.Web/sites",
            "name": "[parameters('functionAppName')]",
            "location": "[parameters('location')]",
            "kind": "functionapp, linux",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "name": "[parameters('functionAppName')]",
                "clientAffinityEnabled": false,
                "siteConfig": {
                    "cors": {
                        "allowedOrigins": [
                            "*"
                        ]
                    },
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2018-11-01').keys[0].value,';','EndpointSuffix=',parameters('endpointSuffix'),';')]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "python 3.10"
                        },
                        {
                            "name": "[variables('connectionStringKey')]",
                            "value": "[listKeys(variables('authRule'),'2017-04-01').primaryConnectionString]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2018-11-01').keys[0].value,';','EndpointSuffix=',parameters('endpointSuffix'),';')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(parameters('functionAppName'))]"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "~10"
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat(parameters('functionAppName'), '/', parameters('functionName'))]",
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2020-06-01",
            "properties": {
                "config": {
                    "bindings": [
                        {
                            "name": "eventHubMessages",
                            "type": "eventHubTrigger",
                            "direction": "in",
                            "eventHubName": "[parameters('eventhubName')]",
                            "connection": "[variables('connectionStringKey')]",
                            "cardinality": "many",
                            "dataType": "",
                            "consumerGroup": "$Default"
                        }
                    ],
                    "disabled": false
                },
                "files": {
                    "__init__.py": "[parameters('functionCode')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
            ]
        }
    ]
}
